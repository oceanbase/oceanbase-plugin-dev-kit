name: build

on:
  push:
    branches: [ "main" ]
    tags: 'v-[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TAG_NAME: ${{ github.ref_name }}

jobs:
  build-on-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4

    - name: Build
      shell: bash
      run: |
        mkdir build
        cd build
        version=$(echo ${TAG_NAME}-0.1.0 | grep -P '(\d*\.\d*\.\d*)' --only-matching)
        version=$(echo ${version} | awk '{print $0}')
        cmake .. -DPACKAGE_RELEASE=`date "+%Y%m%d%H%M%S"` -DPACKAGE_VERSION=${version}
    - name: Generate Packages
      run: cd build && cpack -G RPM && cpack -G DEB && cpack -G TGZ

    - name: Install DEB
      run: |
        cd build
        sudo apt-get install ./oceanbase-plugin-dev-kit*.deb

    - name: Build Examples
      run: |
        mkdir tmp && cd tmp
        cp -rf /usr/share/examples/ObPlugin/ftparser ./
        cd ftparser
        mkdir build && cd build
        cmake ..
        make

    - name: Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "build/oceanbase-plugin-dev-kit*.rpm;build/oceanbase-plugin-dev-kit*.deb;build/oceanbase-plugin-dev-kit*.tgz"
        tags: true
        update_latest_release: true
        draft: true
        overwrite: true

